name: service-ops
on:
  pull_request:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      service:
        description: 'master | processor | scraper | all'
        default: all
        options: [ all, master, processor, scraper ]
        type: choice
      action:
        description: "kill | start | restart"
        required: true
        default: restart
        type: choice
        options:
          - kill
          - start
          - restart
          
jobs:
  svc:
    strategy:
      matrix:
        include:
          - service: master
            dir: master-service
            stop: 'chmod +x man.sh && ./man.sh stop'
            copy: 'cp "/opt/actions-runner/application.properties" "src/main/resources"'
            start: 'chmod +x man.sh && ./man.sh start'
            runs: [ self-hosted, Linux, master ]
            
          - service: processor
            dir: processor-service
            stop: 'call killnow.bat'
            copy: 'copy "C:\actions-runner\application.properties" "src\main\resources\"'
            start: 'call bootnohup.bat'
            runs: [ self-hosted, Windows, processor ]
            
          - service: scraper
            dir: scraper-service
            stop: 'call killnow.bat'
            copy: 'copy "C:\actions-runner\application.properties" "src\main\resources\"'
            start: 'call bootnohup.bat'
            runs: [ self-hosted, Windows, scraper ]
    runs-on: ${{ matrix.runs }}

    # avoid overlapping restarts if several pushes land quickly
    concurrency:
      group: restart-${{ matrix.service }}
      cancel-in-progress: true

    env:
      ACTION: ${{ github.event_name == 'pull_request' && 'restart' || github.event.inputs.action }}

    steps:
      #- name: kill
      #  if: (env.ACTION == 'kill' || env.ACTION == 'restart') &&
      #      (github.event_name == 'pull_request' ||
      #       github.event.inputs.service == 'all' ||
      #       github.event.inputs.service == matrix.service)

      #  uses: ./.github/actions/service-kill
      #  with:
      #    dir:  ${{ matrix.dir }}
      #    stop: ${{ matrix.stop }}
      # --- KILL (Linux) -----------------------------------------------------
      - name: kill (bash)
        if: (env.ACTION == 'kill' || env.ACTION == 'restart') &&
            (github.event_name == 'pull_request' ||
            github.event.inputs.service == 'all' ||
            github.event.inputs.service == matrix.service) &&
            runner.os != 'Windows'
        continue-on-error: true
        shell: bash
        working-directory: ${{ matrix.dir }}
        run: ${{ matrix.stop }}
      
      # --- KILL (Windows) ---------------------------------------------------
      - name: kill (cmd)
        if: (env.ACTION == 'kill' || env.ACTION == 'restart') &&
            (github.event_name == 'pull_request' ||
            github.event.inputs.service == 'all' ||
            github.event.inputs.service == matrix.service) &&
            runner.os == 'Windows'
        continue-on-error: true
        shell: cmd
        working-directory: ${{ matrix.dir }}
        run: ${{ matrix.stop }}
       
      - uses: actions/checkout@v4
        with: 
          ref: ${{ github.sha }} 
          fetch-depth: 0 
          clean: true 
          lfs: true

      - name: start
        if: (env.ACTION == 'start' || env.ACTION == 'both') &&
            (github.event_name == 'pull_request' ||
             github.event.inputs.service == 'all' ||
             github.event.inputs.service == matrix.service)

        uses: ./.github/actions/service-start
        with:
          dir:   ${{ matrix.dir }}
          copy:  ${{ matrix.copy }}
          start: ${{ matrix.start }}

# PR -> zawsze leci (wszystkie wiersze)
# ręcznie + all -> j.w.
# ręcznie + konkretny serwis -> filtrowanie